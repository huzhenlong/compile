{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,QAAQ,GAAG,KAAf;AACA,IAAI,OAAO,QAAQ,SAAR,CAAX;;;;;;AAMA,OAAO,OAAP,GAAiB,IAAjB;;;;;;;;AAQA,SAAS,IAAT,CAAe,GAAf,EAAoB;AAClB,QAAM,GAAN;AACD;;;;;;;;AAQD,SAAS,IAAT,CAAe,EAAf,EAAmB;AACjB,MAAI,EAAE,gBAAgB,IAAlB,CAAJ,EAA6B,OAAO,IAAI,IAAJ,CAAS,EAAT,CAAP;AAC7B,OAAK,GAAL,GAAW,EAAX;AACA,MAAI,EAAJ,EAAQ,KAAK,GAAL,CAAS,EAAT;AACT;;;;;;;;;AASD,KAAK,SAAL,CAAe,GAAf,GAAqB,UAAU,EAAV,EAAc;AACjC,MAAI,cAAc,IAAlB,EAAwB;AACtB,WAAO,KAAK,GAAL,CAAS,GAAG,GAAZ,CAAP;AACD;;AAED,MAAI,cAAc,KAAlB,EAAyB;AACvB,SAAK,IAAI,IAAI,CAAR,EAAW,CAAhB,EAAmB,IAAI,GAAG,GAAH,CAAvB;AAAiC,WAAK,GAAL,CAAS,CAAT;AAAjC,KACA,OAAO,IAAP;AACD;;AAED,OAAK,GAAL,CAAS,IAAT,CAAc,EAAd;AACA,SAAO,IAAP;AACD,CAZD;;;;;;;;;;AAsBA,KAAK,SAAL,CAAe,GAAf,GAAqB,YAAY;AAC/B,MAAI,MAAM,KAAK,GAAf;AACA,MAAI,MAAM,IAAV;AACA,MAAI,IAAI,CAAR;AACA,MAAI,OAAO,UAAU,UAAU,MAAV,GAAmB,CAA7B,CAAX;AACA,MAAI,OAAO,cAAc,OAAO,IAArB,IAA6B,IAAxC;AACA,MAAI,OAAO,OACP,MAAM,IAAN,CAAW,SAAX,EAAsB,CAAtB,EAAyB,UAAU,MAAV,GAAmB,CAA5C,CADO,GAEP,MAAM,IAAN,CAAW,SAAX,CAFJ;;;AAKA,WAAS,IAAT,CAAe,GAAf,EAAoB;AAClB,QAAI,GAAJ,EAAS,OAAO,CAAC,QAAQ,IAAT,EAAe,GAAf,CAAP;AACT,QAAI,KAAK,IAAI,GAAJ,CAAT;AACA,QAAI,MAAM,MAAM,IAAN,CAAW,IAAX,CAAV;;AAEA,QAAI,CAAC,EAAL,EAAS;AACP,aAAO,QAAQ,KAAK,KAAL,CAAW,IAAX,EAAiB,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAAjB,CAAf;AACD;;AAED,SAAK,EAAL,EAAS,IAAT,EAAe,KAAf,CAAqB,GAArB,EAA0B,GAA1B;AACD;;AAED;;AAEA,SAAO,IAAP;AACD,CA1BD","file":"index-compiled.js","sourcesContent":["/**\n * Module Dependencies\n */\n\nvar slice = [].slice;\nvar wrap = require('wrap-fn');\n\n/**\n * Expose `Ware`.\n */\n\nmodule.exports = Ware;\n\n/**\n * Throw an error.\n *\n * @param {Error} error\n */\n\nfunction fail (err) {\n  throw err;\n}\n\n/**\n * Initialize a new `Ware` manager, with optional `fns`.\n *\n * @param {Function or Array or Ware} fn (optional)\n */\n\nfunction Ware (fn) {\n  if (!(this instanceof Ware)) return new Ware(fn);\n  this.fns = [];\n  if (fn) this.use(fn);\n}\n\n/**\n * Use a middleware `fn`.\n *\n * @param {Function or Array or Ware} fn\n * @return {Ware}\n */\n\nWare.prototype.use = function (fn) {\n  if (fn instanceof Ware) {\n    return this.use(fn.fns);\n  }\n\n  if (fn instanceof Array) {\n    for (var i = 0, f; f = fn[i++];) this.use(f);\n    return this;\n  }\n\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Run through the middleware with the given `args` and optional `callback`.\n *\n * @param {Mixed} args...\n * @param {Function} callback (optional)\n * @return {Ware}\n */\n\nWare.prototype.run = function () {\n  var fns = this.fns;\n  var ctx = this;\n  var i = 0;\n  var last = arguments[arguments.length - 1];\n  var done = 'function' == typeof last && last;\n  var args = done\n    ? slice.call(arguments, 0, arguments.length - 1)\n    : slice.call(arguments);\n\n  // next step\n  function next (err) {\n    if (err) return (done || fail)(err);\n    var fn = fns[i++];\n    var arr = slice.call(args);\n\n    if (!fn) {\n      return done && done.apply(null, [null].concat(args));\n    }\n\n    wrap(fn, next).apply(ctx, arr);\n  }\n\n  next();\n\n  return this;\n};\n"]}