{"version":3,"sources":["slicedToArray.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;;AAEA,IAAI,eAAe,QAAQ,wBAAR,CAAnB;;AAEA,IAAI,eAAe,uBAAuB,YAAvB,CAAnB;;AAEA,IAAI,gBAAgB,QAAQ,yBAAR,CAApB;;AAEA,IAAI,gBAAgB,uBAAuB,aAAvB,CAApB;;AAEA,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;AAAE,SAAO,OAAO,IAAI,UAAX,GAAwB,GAAxB,GAA8B,EAAE,SAAS,GAAX,EAArC;AAAwD;;AAE/F,QAAQ,OAAR,GAAkB,YAAY;AAC5B,WAAS,aAAT,CAAuB,GAAvB,EAA4B,CAA5B,EAA+B;AAC7B,QAAI,OAAO,EAAX;AACA,QAAI,KAAK,IAAT;AACA,QAAI,KAAK,KAAT;AACA,QAAI,KAAK,SAAT;;AAEA,QAAI;AACF,WAAK,IAAI,KAAK,CAAC,GAAG,cAAc,OAAlB,EAA2B,GAA3B,CAAT,EAA0C,EAA/C,EAAmD,EAAE,KAAK,CAAC,KAAK,GAAG,IAAH,EAAN,EAAiB,IAAxB,CAAnD,EAAkF,KAAK,IAAvF,EAA6F;AAC3F,aAAK,IAAL,CAAU,GAAG,KAAb;;AAEA,YAAI,KAAK,KAAK,MAAL,KAAgB,CAAzB,EAA4B;AAC7B;AACF,KAND,CAME,OAAO,GAAP,EAAY;AACZ,WAAK,IAAL;AACA,WAAK,GAAL;AACD,KATD,SASU;AACR,UAAI;AACF,YAAI,CAAC,EAAD,IAAO,GAAG,QAAH,CAAX,EAAyB,GAAG,QAAH;AAC1B,OAFD,SAEU;AACR,YAAI,EAAJ,EAAQ,MAAM,EAAN;AACT;AACF;;AAED,WAAO,IAAP;AACD;;AAED,SAAO,UAAU,GAAV,EAAe,CAAf,EAAkB;AACvB,QAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,aAAO,GAAP;AACD,KAFD,MAEO,IAAI,CAAC,GAAG,aAAa,OAAjB,EAA0B,OAAO,GAAP,CAA1B,CAAJ,EAA4C;AACjD,aAAO,cAAc,GAAd,EAAmB,CAAnB,CAAP;AACD,KAFM,MAEA;AACL,YAAM,IAAI,SAAJ,CAAc,sDAAd,CAAN;AACD;AACF,GARD;AASD,CApCiB,EAAlB","file":"slicedToArray-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();"]}