{"version":3,"sources":["es6.array.join.js"],"names":[],"mappings":"AAAA;;;AAEA,IAAI,UAAY,QAAQ,WAAR,CAAhB;IACI,YAAY,QAAQ,eAAR,CADhB;IAEI,YAAY,GAAG,IAFnB;;;AAKA,QAAQ,QAAQ,CAAR,GAAY,QAAQ,CAAR,IAAa,QAAQ,YAAR,KAAyB,MAAzB,IAAmC,CAAC,QAAQ,kBAAR,EAA4B,SAA5B,CAAjD,CAApB,EAA8G,OAA9G,EAAuH;AACrH,QAAM,SAAS,IAAT,CAAc,SAAd,EAAwB;AAC5B,WAAO,UAAU,IAAV,CAAe,UAAU,IAAV,CAAf,EAAgC,cAAc,SAAd,GAA0B,GAA1B,GAAgC,SAAhE,CAAP;AACD;AAHoH,CAAvH","file":"es6.array.join-compiled.js","sourcesContent":["'use strict';\r\n// 22.1.3.13 Array.prototype.join(separator)\r\nvar $export   = require('./_export')\r\n  , toIObject = require('./_to-iobject')\r\n  , arrayJoin = [].join;\r\n\r\n// fallback for not array-like strings\r\n$export($export.P + $export.F * (require('./_iobject') != Object || !require('./_strict-method')(arrayJoin)), 'Array', {\r\n  join: function join(separator){\r\n    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);\r\n  }\r\n});"]}