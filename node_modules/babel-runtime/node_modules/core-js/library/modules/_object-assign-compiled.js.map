{"version":3,"sources":["_object-assign.js"],"names":[],"mappings":"AAAA;;;AAEA,IAAI,UAAW,QAAQ,gBAAR,CAAf;IACI,OAAW,QAAQ,gBAAR,CADf;IAEI,MAAW,QAAQ,eAAR,CAFf;IAGI,WAAW,QAAQ,cAAR,CAHf;IAII,UAAW,QAAQ,YAAR,CAJf;IAKI,UAAW,OAAO,MALtB;;;AAQA,OAAO,OAAP,GAAiB,CAAC,OAAD,IAAY,QAAQ,UAAR,EAAoB,YAAU;AACzD,MAAI,IAAI,EAAR;MACI,IAAI,EADR;MAEI,IAAI,QAFR;MAGI,IAAI,sBAHR;AAIA,IAAE,CAAF,IAAO,CAAP;AACA,IAAE,KAAF,CAAQ,EAAR,EAAY,OAAZ,CAAoB,UAAS,CAAT,EAAW;AAAE,MAAE,CAAF,IAAO,CAAP;AAAW,GAA5C;AACA,SAAO,QAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,KAAqB,CAArB,IAA0B,OAAO,IAAP,CAAY,QAAQ,EAAR,EAAY,CAAZ,CAAZ,EAA4B,IAA5B,CAAiC,EAAjC,KAAwC,CAAzE;AACD,CAR4B,CAAZ,GAQZ,SAAS,MAAT,CAAgB,MAAhB,EAAwB,MAAxB,EAA+B;;AAClC,MAAI,IAAQ,SAAS,MAAT,CAAZ;MACI,OAAQ,UAAU,MADtB;MAEI,QAAQ,CAFZ;MAGI,aAAa,KAAK,CAHtB;MAII,SAAa,IAAI,CAJrB;AAKA,SAAM,OAAO,KAAb,EAAmB;AACjB,QAAI,IAAS,QAAQ,UAAU,OAAV,CAAR,CAAb;QACI,OAAS,aAAa,QAAQ,CAAR,EAAW,MAAX,CAAkB,WAAW,CAAX,CAAlB,CAAb,GAAgD,QAAQ,CAAR,CAD7D;QAEI,SAAS,KAAK,MAFlB;QAGI,IAAS,CAHb;QAII,GAJJ;AAKA,WAAM,SAAS,CAAf;AAAiB,UAAG,OAAO,IAAP,CAAY,CAAZ,EAAe,MAAM,KAAK,GAAL,CAArB,CAAH,EAAmC,EAAE,GAAF,IAAS,EAAE,GAAF,CAAT;AAApD;AACD,GAAC,OAAO,CAAP;AACH,CAtBgB,GAsBb,OAtBJ","file":"_object-assign-compiled.js","sourcesContent":["'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys  = require('./_object-keys')\n  , gOPS     = require('./_object-gops')\n  , pIE      = require('./_object-pie')\n  , toObject = require('./_to-object')\n  , IObject  = require('./_iobject')\n  , $assign  = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function(){\n  var A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , aLen  = arguments.length\n    , index = 1\n    , getSymbols = gOPS.f\n    , isEnum     = pIE.f;\n  while(aLen > index){\n    var S      = IObject(arguments[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  } return T;\n} : $assign;"]}