{"version":3,"sources":["es6.date.to-string.js"],"names":[],"mappings":";;AAAA,IAAI,YAAe,KAAK,SAAxB;IACI,eAAe,cADnB;IAEI,YAAe,UAFnB;IAGI,YAAe,UAAU,SAAV,CAHnB;IAII,UAAe,UAAU,OAJ7B;AAKA,IAAG,IAAI,IAAJ,CAAS,GAAT,IAAgB,EAAhB,IAAsB,YAAzB,EAAsC;AACpC,UAAQ,aAAR,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAAS,QAAT,GAAmB;AAC9D,QAAI,QAAQ,QAAQ,IAAR,CAAa,IAAb,CAAZ;AACA,WAAO,UAAU,KAAV,GAAkB,UAAU,IAAV,CAAe,IAAf,CAAlB,GAAyC,YAAhD;AACD,GAHD;AAID","file":"es6.date.to-string-compiled.js","sourcesContent":["var DateProto    = Date.prototype\n  , INVALID_DATE = 'Invalid Date'\n  , TO_STRING    = 'toString'\n  , $toString    = DateProto[TO_STRING]\n  , getTime      = DateProto.getTime;\nif(new Date(NaN) + '' != INVALID_DATE){\n  require('./_redefine')(DateProto, TO_STRING, function toString(){\n    var value = getTime.call(this);\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}"]}