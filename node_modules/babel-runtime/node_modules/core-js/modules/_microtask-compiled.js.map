{"version":3,"sources":["_microtask.js"],"names":[],"mappings":";;AAAA,IAAI,SAAY,QAAQ,WAAR,CAAhB;IACI,YAAY,QAAQ,SAAR,EAAmB,GADnC;IAEI,WAAY,OAAO,gBAAP,IAA2B,OAAO,sBAFlD;IAGI,UAAY,OAAO,OAHvB;IAII,UAAY,OAAO,OAJvB;IAKI,SAAY,QAAQ,QAAR,EAAkB,OAAlB,KAA8B,SAL9C;;AAOA,OAAO,OAAP,GAAiB,YAAU;AACzB,MAAI,IAAJ,EAAU,IAAV,EAAgB,MAAhB;;AAEA,MAAI,QAAQ,SAAR,KAAQ,GAAU;AACpB,QAAI,MAAJ,EAAY,EAAZ;AACA,QAAG,WAAW,SAAS,QAAQ,MAA5B,CAAH,EAAuC,OAAO,IAAP;AACvC,WAAM,IAAN,EAAW;AACT,WAAO,KAAK,EAAZ;AACA,aAAO,KAAK,IAAZ;AACA,UAAI;AACF;AACD,OAFD,CAEE,OAAM,CAAN,EAAQ;AACR,YAAG,IAAH,EAAQ,SAAR,KACK,OAAO,SAAP;AACL,cAAM,CAAN;AACD;AACF,KAAC,OAAO,SAAP;AACF,QAAG,MAAH,EAAU,OAAO,KAAP;AACX,GAfD;;;AAkBA,MAAG,MAAH,EAAU;AACR,aAAS,kBAAU;AACjB,cAAQ,QAAR,CAAiB,KAAjB;AACD,KAFD;;AAID,GALD,MAKO,IAAG,QAAH,EAAY;AACjB,UAAI,SAAS,IAAb;UACI,OAAS,SAAS,cAAT,CAAwB,EAAxB,CADb;AAEA,UAAI,QAAJ,CAAa,KAAb,EAAoB,OAApB,CAA4B,IAA5B,EAAkC,EAAC,eAAe,IAAhB,EAAlC,E;AACA,eAAS,kBAAU;AACjB,aAAK,IAAL,GAAY,SAAS,CAAC,MAAtB;AACD,OAFD;;AAID,KARM,MAQA,IAAG,WAAW,QAAQ,OAAtB,EAA8B;AACnC,YAAI,UAAU,QAAQ,OAAR,EAAd;AACA,iBAAS,kBAAU;AACjB,kBAAQ,IAAR,CAAa,KAAb;AACD,SAFD;;;;;;;AASD,OAXM,MAWA;AACL,mBAAS,kBAAU;;AAEjB,sBAAU,IAAV,CAAe,MAAf,EAAuB,KAAvB;AACD,WAHD;AAID;;AAED,SAAO,UAAS,EAAT,EAAY;AACjB,QAAI,OAAO,EAAC,IAAI,EAAL,EAAS,MAAM,SAAf,EAAX;AACA,QAAG,IAAH,EAAQ,KAAK,IAAL,GAAY,IAAZ;AACR,QAAG,CAAC,IAAJ,EAAS;AACP,aAAO,IAAP;AACA;AACD,KAAC,OAAO,IAAP;AACH,GAPD;AAQD,CA5DD","file":"_microtask-compiled.js","sourcesContent":["var global    = require('./_global')\n  , macrotask = require('./_task').set\n  , Observer  = global.MutationObserver || global.WebKitMutationObserver\n  , process   = global.process\n  , Promise   = global.Promise\n  , isNode    = require('./_cof')(process) == 'process';\n\nmodule.exports = function(){\n  var head, last, notify;\n\n  var flush = function(){\n    var parent, fn;\n    if(isNode && (parent = process.domain))parent.exit();\n    while(head){\n      fn   = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch(e){\n        if(head)notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if(parent)parent.enter();\n  };\n\n  // Node.js\n  if(isNode){\n    notify = function(){\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver\n  } else if(Observer){\n    var toggle = true\n      , node   = document.createTextNode('');\n    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new\n    notify = function(){\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if(Promise && Promise.resolve){\n    var promise = Promise.resolve();\n    notify = function(){\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function(){\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function(fn){\n    var task = {fn: fn, next: undefined};\n    if(last)last.next = task;\n    if(!head){\n      head = task;\n      notify();\n    } last = task;\n  };\n};"]}