{"version":3,"sources":["es6.number.to-fixed.js"],"names":[],"mappings":"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","file":"es6.number.to-fixed-compiled.js","sourcesContent":["'use strict';\r\nvar $export      = require('./_export')\r\n  , anInstance   = require('./_an-instance')\r\n  , toInteger    = require('./_to-integer')\r\n  , aNumberValue = require('./_a-number-value')\r\n  , repeat       = require('./_string-repeat')\r\n  , $toFixed     = 1..toFixed\r\n  , floor        = Math.floor\r\n  , data         = [0, 0, 0, 0, 0, 0]\r\n  , ERROR        = 'Number.toFixed: incorrect invocation!'\r\n  , ZERO         = '0';\r\n\r\nvar multiply = function(n, c){\r\n  var i  = -1\r\n    , c2 = c;\r\n  while(++i < 6){\r\n    c2 += n * data[i];\r\n    data[i] = c2 % 1e7;\r\n    c2 = floor(c2 / 1e7);\r\n  }\r\n};\r\nvar divide = function(n){\r\n  var i = 6\r\n    , c = 0;\r\n  while(--i >= 0){\r\n    c += data[i];\r\n    data[i] = floor(c / n);\r\n    c = (c % n) * 1e7;\r\n  }\r\n};\r\nvar numToString = function(){\r\n  var i = 6\r\n    , s = '';\r\n  while(--i >= 0){\r\n    if(s !== '' || i === 0 || data[i] !== 0){\r\n      var t = String(data[i]);\r\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\r\n    }\r\n  } return s;\r\n};\r\nvar pow = function(x, n, acc){\r\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\r\n};\r\nvar log = function(x){\r\n  var n  = 0\r\n    , x2 = x;\r\n  while(x2 >= 4096){\r\n    n += 12;\r\n    x2 /= 4096;\r\n  }\r\n  while(x2 >= 2){\r\n    n  += 1;\r\n    x2 /= 2;\r\n  } return n;\r\n};\r\n\r\n$export($export.P + $export.F * (!!$toFixed && (\r\n  0.00008.toFixed(3) !== '0.000' ||\r\n  0.9.toFixed(0) !== '1' ||\r\n  1.255.toFixed(2) !== '1.25' ||\r\n  1000000000000000128..toFixed(0) !== '1000000000000000128'\r\n) || !require('./_fails')(function(){\r\n  // V8 ~ Android 4.3-\r\n  $toFixed.call({});\r\n})), 'Number', {\r\n  toFixed: function toFixed(fractionDigits){\r\n    var x = aNumberValue(this, ERROR)\r\n      , f = toInteger(fractionDigits)\r\n      , s = ''\r\n      , m = ZERO\r\n      , e, z, j, k;\r\n    if(f < 0 || f > 20)throw RangeError(ERROR);\r\n    if(x != x)return 'NaN';\r\n    if(x <= -1e21 || x >= 1e21)return String(x);\r\n    if(x < 0){\r\n      s = '-';\r\n      x = -x;\r\n    }\r\n    if(x > 1e-21){\r\n      e = log(x * pow(2, 69, 1)) - 69;\r\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\r\n      z *= 0x10000000000000;\r\n      e = 52 - e;\r\n      if(e > 0){\r\n        multiply(0, z);\r\n        j = f;\r\n        while(j >= 7){\r\n          multiply(1e7, 0);\r\n          j -= 7;\r\n        }\r\n        multiply(pow(10, j, 1), 0);\r\n        j = e - 1;\r\n        while(j >= 23){\r\n          divide(1 << 23);\r\n          j -= 23;\r\n        }\r\n        divide(1 << j);\r\n        multiply(1, 1);\r\n        divide(2);\r\n        m = numToString();\r\n      } else {\r\n        multiply(0, z);\r\n        multiply(1 << -e, 0);\r\n        m = numToString() + repeat.call(ZERO, f);\r\n      }\r\n    }\r\n    if(f > 0){\r\n      k = m.length;\r\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\r\n    } else {\r\n      m = s + m;\r\n    } return m;\r\n  }\r\n});"]}