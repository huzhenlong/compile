{"version":3,"sources":["_to-primitive.js"],"names":[],"mappings":";;;AACA,IAAI,WAAW,QAAQ,cAAR,CAAf;;;AAGA,OAAO,OAAP,GAAiB,UAAS,EAAT,EAAa,CAAb,EAAe;AAC9B,MAAG,CAAC,SAAS,EAAT,CAAJ,EAAiB,OAAO,EAAP;AACjB,MAAI,EAAJ,EAAQ,GAAR;AACA,MAAG,KAAK,QAAQ,KAAK,GAAG,QAAhB,KAA6B,UAAlC,IAAgD,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAf,CAApD,EAAgF,OAAO,GAAP;AAChF,MAAG,QAAQ,KAAK,GAAG,OAAhB,KAA4B,UAA5B,IAA0C,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAf,CAA9C,EAA0E,OAAO,GAAP;AAC1E,MAAG,CAAC,CAAD,IAAM,QAAQ,KAAK,GAAG,QAAhB,KAA6B,UAAnC,IAAiD,CAAC,SAAS,MAAM,GAAG,IAAH,CAAQ,EAAR,CAAf,CAArD,EAAiF,OAAO,GAAP;AACjF,QAAM,UAAU,yCAAV,CAAN;AACD,CAPD","file":"_to-primitive-compiled.js","sourcesContent":["// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};"]}