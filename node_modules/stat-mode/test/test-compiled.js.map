{"version":3,"sources":["test.js"],"names":[],"mappings":"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","file":"test-compiled.js","sourcesContent":["\nvar Mode = require('../');\nvar assert = require('assert');\n\ndescribe('stat-mode', function () {\n\n  it('should export the `Mode` constructor', function () {\n    assert.equal('function', typeof Mode);\n    assert.equal('Mode', Mode.name);\n  });\n\n  describe('Mode', function () {\n\n    it('should return a `Mode` instance with `new`', function () {\n      var m = new Mode({});\n      assert(m instanceof Mode);\n    });\n\n    it('should return a `Mode` instance without `new`', function () {\n      var m = Mode({});\n      assert(m instanceof Mode);\n    });\n\n    it('should throw an Error if no `stat` object is passed in', function () {\n      try {\n        new Mode();\n        assert(false, 'unreachable');\n      } catch (e) {\n        assert.equal('must pass in a \"stat\" object', e.message);\n      }\n    });\n\n    [\n      {\n        mode: 33188 /* 0100644 */,\n        octal: '0644',\n        string: '-rw-r--r--',\n        type: 'file'\n      },\n      {\n        mode: 16877 /* 040755 */,\n        octal: '0755',\n        string: 'drwxr-xr-x',\n        type: 'directory'\n      },\n      {\n        mode: 16832 /* 040700 */,\n        octal: '0700',\n        string: 'drwx------',\n        type: 'directory'\n      },\n      {\n        mode: 41325 /* 0120555 */,\n        octal: '0555',\n        string: 'lr-xr-xr-x',\n        type: 'symbolicLink'\n      },\n      {\n        mode: 8592 /* 020620 */,\n        octal: '0620',\n        string: 'crw--w----',\n        type: 'characterDevice'\n      },\n      {\n        mode: 24960 /* 060600 */,\n        octal: '0600',\n        string: 'brw-------',\n        type: 'blockDevice'\n      },\n      {\n        mode: 4516 /* 010644 */,\n        octal: '0644',\n        string: 'prw-r--r--',\n        type: 'FIFO'\n      }\n    ].forEach(function (test) {\n      var m = new Mode(test);\n      var isFn = 'is' + test.type[0].toUpperCase() + test.type.substring(1);\n      var strMode = m.toString();\n      var opposite = test.type == 'file' ? 'isDirectory' : 'isFile';\n      var first = test.type == 'file' ? 'd' : '-';\n      describe('input: 0' + test.mode.toString(8), function () {\n        describe('#toString()', function () {\n          it('should equal \"' + test.string + '\"', function () {\n            assert.equal(m.toString(), test.string);\n          });\n        });\n        describe('#toOctal()', function () {\n          it('should equal \"' + test.octal + '\"', function () {\n            assert.equal(m.toOctal(), test.octal);\n          });\n        });\n        describe('#' + isFn + '()', function () {\n          it('should return `true` for #' + isFn + '()', function () {\n            assert.ok(m[isFn]());\n          });\n          it('should remain \"' + strMode + '\" after #' + isFn + '(true) (gh-2)', function () {\n            assert.equal(true, m[isFn](true));\n            assert.equal(strMode, m.toString());\n          });\n        });\n        describe('#' + opposite + '(true)', function () {\n          it('should return `false` for `#' + opposite + '(true)`', function () {\n            assert.equal(false, m[opposite](true));\n          });\n          it('should be \"' + first + m.toString().substring(1) + '\" after #' + opposite + '(true) (gh-2)', function () {\n            assert.equal(first + m.toString().substring(1), m.toString());\n          });\n        });\n      });\n    });\n\n  });\n\n});\n"]}